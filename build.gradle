plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.plazoleta'
version = '0.0.1-SNAPSHOT'


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	implementation 'org.springframework.security:spring-security-crypto:6.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.11.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport

}

jacoco {
	toolVersion = "0.8.8"
}

def coverageExcludes = [
		'**/dto/**',
		'**/spi/**',
		'**/api/**',
		'**/mappers/**',
		'**/repository/**',
		'**/*.test',
		'**/generated/**'
]

tasks.jacocoTestReport {
	dependsOn test
	reports {
		html.required.set(true)
		xml.required.set(true)
		csv.required.set(false)
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: coverageExcludes)
		}))
	}
}

